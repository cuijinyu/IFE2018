<template>
    <span>
        <ul class="san-cascader-menu-panel">
            <san-cascader-menu-item s-for="item,index in info"
                                    disabled="{{item.disabled}}"
                                    label="{{item.label}}"
                                    info="{{item}}"
                                    on-click="handleClick(index)">
            </san-cascader-menu-item>
        </ul>
        <div s-for="i,idx in info"
             class="san-cascader-menu">
            <san-cascader-menu s-if="i.children"
                               class="san-cascader-menu-disapear"
                               info="{{i.children}}"
                               s-transition="hook('slide')">
            </san-cascader-menu>
        </div>
    </span>
</template>

<script>
    import {transition} from 'san-transition';
    import sanCascaderMenuItem from './san-cascader-menu-item.san';
    export default {
        initData:function() {
            return{
                info:{},
                items:[],
                level:10,//z-index
                menus:[],
                showFlag:false,
            }
        },
        attached() {

            //让有下级菜单的元素显示箭头图标
            let items = this.data.get('items');
            items.forEach(ele => {
                if(ele.data.get('info').hasOwnProperty('children')){
                    ele['hasSub'] = true;
                    ele.data.set("info['hasSub']",true);
                }else{
                    ele['hasSub'] = false;
                    ele.data.set("info['hasSub']",false);
                }
            })

            this.dispatch('menu-init',this);

        },
        components: {
            'san-cascader-menu':'self',
            'san-cascader-menu-item':sanCascaderMenuItem
        },
        arrowShow(message) {
            console.log(message);
            return message.hasOwnProperty('children');
        },
        messages:{
            'item-inited':function (message) {
                this.data.push('items',message.value);
            },
            'menu-init':function (message) {
                this.data.push('menus',message.value);
            }
        },
        handleClick(index) {

            dispearAll(this);

            this.data.get(`menus[${index}]`).data.set('level',this.data.get('level')+1);
            this.data.get(`menus[${index}]`).data.set('class','san-cascader-menu-show');

            this.data.set('level',this.data.get('level')+1);
            this.data.get(`menus[${index}]`).el.setAttribute('style',`z-index:${this.data.get('level')+1}`);
        },
        hook:transition
    }

    /**
     * 利用递归清除所有的样式
     * @param ele
     */
    function dispearAll(ele) {
        let subMenu;
        if((subMenu = ele.data.get('menus')).length>0){
            subMenu.forEach(e => {
                e.data.set('class','san-cascader-menu-disapear');
                dispearAll(e);
            })
        }
    }
</script>

<style scoped>
    .san-cascader-menu{
        margin-left:160px;
        position:absolute;
    }
    .san-cascader-menu-panel{
        border:1px solid rgba(0,0,0,0.2);
        width:160px;
        height: 200px;
        border-radius: 5px;
        list-style: none;
        padding:0px;
        margin:0px;
        background: white;
        box-shadow: 0px 0px 10px #eae5e9;
    }
    .san-cascader-menu-panel ul{
        width:160px;
    }
    ul{
        float:left;
    }
    .slide-enter, .slide-leave {
        transition: all 0.5s;
    }
    .slide-enter, .slide-before-leave {
        opacity: 1;
        transform: translate(0, 0);
    }
    .slide-before-enter, .slide-leave {
        opacity: 0;
        transform: translate(100px, 0);
    }
    .san-cascader-menu-show{

    }
    .san-cascader-menu-disapear{
        display: none;
    }
</style>